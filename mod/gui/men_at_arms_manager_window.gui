######################################################
# Men-At-Arms Manager - Main Window (Global Variable Version)
######################################################

window = {
	name = "men_at_arms_manager_window"
	widgetid = "men_at_arms_manager_window"
	datacontext = "[GetPlayer]"
	datacontext = "[GetVariableSystem]"

	parentanchor = center

	size = { 850 900 }

	layer = windows_layer

	movable = yes

	using = Window_Background
	using = Window_Decoration
	
	visible = "[VariableSystem.Exists('men_at_arms_manager_open')]"

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		on_start = "[PdxGuiWidget.StackTop]"
		on_start = "[GetVariableSystem.Clear( 'maa_manager_selected_regiment_id' )]"
		on_start = "[GetScriptedGui('maa_manager_data_create').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
		on_start = "[VariableSystem.Set('maa_manager_tab', 'troops')]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		on_start = "[GetScriptedGui('maa_manager_data_create').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
		on_start = "[GetVariableSystem.Clear( 'maa_manager_selected_regiment_id' )]"
		on_start = "[VariableSystem.Clear( 'maa_manager_tab' )]"
		on_start = "[GetScriptedGui('maa_manager_reset_transfers').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
	}
	
	vbox = {
		using = Window_Margins
		
		# Window Header
		header_pattern = {
			layoutpolicy_horizontal = expanding
			
			blockoverride "header_text" {
				text = "MEN_AT_ARMS_MANAGER_WINDOW_TITLE"
			}
			
			blockoverride "button_close" {
				onclick = "[VariableSystem.Clear('men_at_arms_manager_open')]"
			}
		}
		
		# Main Content Area
		vbox = {
			name = "maa_manager_main_vbox"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			spacing = 10
			margin = { 23 0 }

			background = {
				texture = "gfx/interface/skinned/illustrations/moving.dds"
				fittype = end
				alpha = 1

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
					blend_mode = alphamultiply
					mirror = vertical
				}
			}

			# select regiment label
			text_single = {
				parentanchor = left
				name = "lbl_select_regiment"
				text = "MAA_MANAGER_SELECT_REGIMENT"
				using = Font_Size_Small
				# align left
				
			}

			######################################################
			# main regiment selection
			######################################################
			hbox = {
				layoutpolicy_horizontal = expanding

				name = "main_selection_tiles"
				spacing = 0

				fixedgridbox = {
					datamodel = "[GetPlayer.MakeScope.GetList('maa_regiment_list')]"
					layoutpolicy_horizontal = expanding
					flipdirection = yes
					datamodel_wrap = 4
					addcolumn = 169
					addrow = 93

					item = {
						container_maan_mainselection_item = {
							datacontext = "[Scope.Regiment]"
						}
					}
				}

				spacer = {
					layoutpolicy_horizontal = expanding
				}
			}



		######################################################
		# TAB NAVIGATION
		######################################################
		hbox = {
			name = "tab_buttons"
			layoutpolicy_horizontal = expanding
			margin = { 20 10 }
			spacing = 5

			button_tab = {
				layoutpolicy_horizontal = expanding
				text = "MAA_MANAGER_TAB_TROOPS"
				onclick = "[VariableSystem.Set('maa_manager_tab', 'troops')]"
				down = "[VariableSystem.HasValue('maa_manager_tab', 'troops')]"
			}

			button_tab = {
				layoutpolicy_horizontal = expanding
				text = "MAA_MANAGER_TAB_REGIMENTS"
				onclick = "[VariableSystem.Set('maa_manager_tab', 'regiments')]"
				down = "[VariableSystem.HasValue('maa_manager_tab', 'regiments')]"
			}

			button_tab = {
				layoutpolicy_horizontal = expanding
				text = "MAA_MANAGER_TAB_RETRAIN"
				onclick = "[VariableSystem.Set('maa_manager_tab', 'retrain')]"
				down = "[VariableSystem.HasValue('maa_manager_tab', 'retrain')]"
			}
		}

			######################################################
			# TAB 1: TROOP MOVEMENT
			######################################################
			vbox = {
				name = "tab_troops_content"
				visible = "[VariableSystem.HasValue('maa_manager_tab', 'troops')]"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				spacing = 10

				using = Animation_Tab_Switch

				# Instructions
				text_label_center = {
					text = "MAA_MANAGER_TROOPS_INSTRUCTIONS"
					layoutpolicy_horizontal = expanding
					default_format = "#weak"
					margin = { 10 5 }
				}

				######################################################
				# Target Regiment Selection
				######################################################
				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					spacing = 5

					scrollbox = {
						name = "troops_target_scrollbox"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						scrollbarpolicy_horizontal = always_off

						blockoverride "scrollbox_content" {
							vbox = {
								layoutpolicy_horizontal = expanding
								spacing = 10
								margin = { 0 5 }

								fixedgridbox = {
									datamodel = "[GetPlayer.MakeScope.GetList('maa_move_target_list')]"
									layoutpolicy_horizontal = expanding
									flipdirection = yes
									datamodel_wrap = 4
									addcolumn = 169
									addrow = 93

									item = {
										container_maan_target_selection_item = {
											datacontext = "[Scope.Regiment]"
										}
									}
								}

								expand = {}
							}
						}

						blockoverride "scrollbox_empty" {
							text = "MAA_MANAGER_NO_MOVE_TARGETS"
							visible = "[Not(GetGlobalVariable('maa_manager_move_has_targets').IsSet)]"
						}
					}
				}

				######################################################
				# Troop Transfer Controls
				######################################################
				vbox = {
					name = "troops_transfer_panel"
					visible = "[GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').IsSet]"
					layoutpolicy_horizontal = expanding
					spacing = 15
					margin = { 15 15 }
					
					background = {
						using = Background_Area_Dark
						alpha = 0.8
					}

					# Header
					hbox = {
						layoutpolicy_horizontal = expanding
						
						icon = {
							size = { 32 32 }
							texture = "gfx/interface/icons/icon_soldier.dds"
						}
						
						text_single = {
							text = "MAA_MANAGER_TRANSFER_TROOPS_TITLE"
							default_format = "#high"
							align = left|nobaseline
							margin_left = 8
							using = Font_Size_Big
						}

						expand = {}
					}

					divider_light = {
						layoutpolicy_horizontal = expanding
					}

					# Stats Display - Improved Layout
					vbox = {
						layoutpolicy_horizontal = expanding
						spacing = 8
						margin = { 5 0 }

						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 15

							# Available Troops
							vbox = {
								spacing = 3

								text_single = {
									text = "MAA_MANAGER_AVAILABLE_TO_TRANSFER"
									default_format = "#weak"
									using = Font_Size_Small
								}

								text_single = {
									datacontext = "[GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').Regiment]"
									text = "[Regiment.BuildCurrentRegimentCountString]"
									default_format = "#high"
									using = Font_Size_Medium
									tooltip = "MAA_MANAGER_AVAILABLE_TOOLTIP"
								}
							}

							expand = {}

							# Transfer Buttons - Inline with numbers
							hbox = {
								spacing = 5

								# Decrease button (arrow left)
								button_round = {
									size = { 36 36 }
									tooltip = "MAA_MANAGER_DECREASE_TRANSFER_TOOLTIP"
									enabled = "[GreaterThan_int32(GetPlayer.MakeScope.Var('maa_total_planned_transfers').GetValue, '(int32)0')]"
									onclick = "[GetScriptedGui('maa_manager_decrease_transfer').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

									button_back = {
										parentanchor = center
										size = { 25 25 }
										alwaystransparent = yes
									}
								}

								# Stack size display
								widget = {
									size = { 60 36 }

									background = {
										using = Background_Area
									}

									text_single = {
										parentanchor = center
										raw_text = "[GetPlayer.MakeScope.Var('maa_stack_size').GetValue|100]"
										default_format = "#high"
										using = Font_Size_Medium
									}
								}

								# Increase button (arrow right)
								button_round = {
									size = { 36 36 }
									tooltip = "MAA_MANAGER_INCREASE_TRANSFER_TOOLTIP"
									enabled = "[And(And(GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').IsSet, GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').IsSet), LessThan_int32(GetPlayer.MakeScope.Var('maa_total_planned_transfers').GetValue, GetPlayer.MakeScope.Var('maa_target_capacity').GetValue))]"
									onclick = "[GetScriptedGui('maa_manager_increase_transfer').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

									button_forward = {
										parentanchor = center
										size = { 25 25 }
										alwaystransparent = yes
									}
								}

								spacer = {
									size = { 10 0 }
								}

								# Transfer All button
								button_standard = {
									text = "MAA_MANAGER_TRANSFER_ALL"
									tooltip = "MAA_MANAGER_TRANSFER_ALL_TOOLTIP"
									enabled = "[And(And(GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').IsSet, GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').IsSet), GreaterThan_int32(GetPlayer.MakeScope.Var('maa_target_capacity').GetValue, '(int32)0'))]"
									onclick = "[GetScriptedGui('maa_manager_transfer_all').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									size = { 130 36 }
									
									default_format = "#high"
								}
							}

							expand = {}

							# Current Transfer
							vbox = {
								spacing = 3

								text_single = {
									text = "MAA_MANAGER_CURRENT_TRANSFER"
									default_format = "#weak"
									using = Font_Size_Small
								}

								text_single = {
									raw_text = "[GetPlayer.MakeScope.Var('maa_total_planned_transfers').GetValue|0] / [GetPlayer.MakeScope.Var('maa_target_capacity').GetValue|0]"
									default_format = "#P"
									using = Font_Size_Medium
									tooltip = "MAA_MANAGER_CURRENT_TOOLTIP"
								}
							}
						}
					}

					divider_light = {
						layoutpolicy_horizontal = expanding
					}

					# Action Buttons
					hbox = {
						layoutpolicy_horizontal = expanding
						spacing = 10

					button_standard = {
						name = "reset_troops"
						layoutpolicy_horizontal = expanding
						tooltip = "MAA_MANAGER_RESET_TOOLTIP"
						onclick = "[GetScriptedGui('maa_manager_reset_transfers').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

						button_clear = {
							parentanchor = center
							alwaystransparent = yes
						}
					}
					
					button_primary = {
						name = "confirm_troops"
						layoutpolicy_horizontal = expanding
						tooltip = "MAA_MANAGER_CONFIRM_TOOLTIP"
						onclick = "[GetScriptedGui('maa_manager_confirm_transfers').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"							button_army_reorganize = {
								parentanchor = center
								alwaystransparent = yes
							}
						}
					}
				}
			}

			######################################################
			# TAB 2: REGIMENT MOVEMENT
			######################################################
			vbox = {
				name = "tab_regiments_content"
				visible = "[VariableSystem.HasValue('maa_manager_tab', 'regiments')]"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				spacing = 10

				using = Animation_Tab_Switch

				# Instructions
				text_label_center = {
					text = "MAA_MANAGER_REGIMENTS_INSTRUCTIONS"
					layoutpolicy_horizontal = expanding
					default_format = "#weak"
					margin = { 10 5 }
				}

				######################################################
				# Target Regiment Selection
				######################################################
				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					spacing = 5

					scrollbox = {
						name = "regiments_target_scrollbox"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						scrollbarpolicy_horizontal = always_off

						blockoverride "scrollbox_content" {
							vbox = {
								layoutpolicy_horizontal = expanding
								spacing = 10
								margin = { 0 5 }

								fixedgridbox = {
									datamodel = "[GetPlayer.MakeScope.GetList('maa_move_target_list')]"
									layoutpolicy_horizontal = expanding
									flipdirection = yes
									datamodel_wrap = 4
									addcolumn = 169
									addrow = 93

									item = {
										container_maan_target_selection_item = {
											datacontext = "[Scope.Regiment]"
										}
									}
								}

								expand = {}
							}
						}

						blockoverride "scrollbox_empty" {
							text = "MAA_MANAGER_NO_MOVE_TARGETS"
							visible = "[Not(GetGlobalVariable('maa_manager_move_has_targets').IsSet)]"
						}
					}
				}

				######################################################
				# Regiment Transfer Controls
				######################################################
				vbox = {
					name = "regiments_transfer_panel"
					visible = "[GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').IsSet]"
					layoutpolicy_horizontal = expanding
					spacing = 15
					margin = { 15 15 }
					
					background = {
						using = Background_Area_Dark
						alpha = 0.8
					}

					# Header
					hbox = {
						layoutpolicy_horizontal = expanding
						
						icon = {
							size = { 32 32 }
							texture = "gfx/interface/icons/icon_banner.dds"
						}
						
						text_single = {
							text = "MAA_MANAGER_TRANSFER_REGIMENTS_TITLE"
							default_format = "#high"
							align = left|nobaseline
							margin_left = 8
							using = Font_Size_Big
						}

						expand = {}
					}

					divider_light = {
						layoutpolicy_horizontal = expanding
					}

					# Stats Display with Transfer Buttons - Horizontal Layout
					vbox = {
						layoutpolicy_horizontal = expanding
						spacing = 10
						margin = { 10 10 }

						# Stack numbers row
						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 20

							# Source Stacks (Left)
							vbox = {
								spacing = 5
								layoutpolicy_horizontal = expanding

								text_single = {
									text = "MAA_MANAGER_SOURCE_REGIMENTS"
									default_format = "#weak"
									using = Font_Size_Small
									align = center
								}

								text_single = {
									datacontext = "[GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').Regiment]"
									raw_text = "[Regiment.GetMAAChunkCount]"
									default_format = "#high"
									using = Font_Size_Big
									align = center
									tooltip = "MAA_MANAGER_REGIMENTS_TOOLTIP"
								}
							}

							expand = {}

							# Transfer buttons - vbox to stack arrow buttons and "Move Last" buttons
							vbox = {
								spacing = 3

								# Arrow buttons row
								hbox = {
									spacing = 5

									# Transfer FROM target (← back arrow)
									button_round = {
										size = { 36 36 }
										tooltip = "[SelectLocalization(And(GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').IsSet, EqualTo_int32(GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').Regiment.GetMAAChunkCount, '(int32)1')), 'MAA_MANAGER_TRANSFER_DISABLED_LAST_STACK', SelectLocalization(And(GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').IsSet, GreaterThanOrEqualTo_int32(GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').Regiment.GetMAAChunkCount, GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').Regiment.CalcMaxMAAChunkCount)), 'MAA_MANAGER_TRANSFER_DISABLED_TARGET_FULL', 'MAA_MANAGER_TRANSFER_FROM_TARGET_TOOLTIP'))]"
										onclick = "[GetScriptedGui('maa_manager_transfer_regiment_from_target_effect').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[And(And(GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').IsSet, GreaterThan_int32(GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').Regiment.GetMAAChunkCount, '(int32)1')), And(GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').IsSet, LessThan_int32(GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').Regiment.GetMAAChunkCount, GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').Regiment.CalcMaxMAAChunkCount)))]"

										button_back = {
											parentanchor = center
											size = { 25 25 }
											alwaystransparent = yes
										}
									}

									# Stack size display
									text_single = {
										raw_text = "1"
										default_format = "#high"
										align = center|nobaseline
										using = Font_Size_Medium
										minimumsize = { 30 0 }
									}

									# Transfer TO target (→ forward arrow)
									button_round = {
										size = { 36 36 }
										tooltip = "[SelectLocalization(And(GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').IsSet, EqualTo_int32(GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').Regiment.GetMAAChunkCount, '(int32)1')), 'MAA_MANAGER_TRANSFER_DISABLED_LAST_STACK', SelectLocalization(And(GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').IsSet, GreaterThanOrEqualTo_int32(GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').Regiment.GetMAAChunkCount, GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').Regiment.CalcMaxMAAChunkCount)), 'MAA_MANAGER_TRANSFER_DISABLED_TARGET_FULL', 'MAA_MANAGER_TRANSFER_TO_TARGET_TOOLTIP'))]"
										onclick = "[GetScriptedGui('maa_manager_transfer_regiment_to_target_effect').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[And(And(GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').IsSet, GreaterThan_int32(GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').Regiment.GetMAAChunkCount, '(int32)1')), And(GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').IsSet, LessThan_int32(GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').Regiment.GetMAAChunkCount, GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').Regiment.CalcMaxMAAChunkCount)))]"
										
										button_forward = {
											parentanchor = center
											size = { 25 25 }
											alwaystransparent = yes
										}
									}
								}

								# Move Last buttons row (horizontal, below arrows, aligned to inner edges)
								hbox = {
									visible = "[Or(And(GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').IsSet, EqualTo_int32(GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').Regiment.GetMAAChunkCount, '(int32)1')), And(GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').IsSet, EqualTo_int32(GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').Regiment.GetMAAChunkCount, '(int32)1')))]"
									spacing = 5

									# Container for left button (90px to contain full button, aligned right)
									widget = {
										size = { 90 22 }

										# Move Last button - FROM target (aligned RIGHT edge to container)
										button_standard = {
											visible = "[And(GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').IsSet, EqualTo_int32(GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').Regiment.GetMAAChunkCount, '(int32)1'))]"
											enabled = "[And(GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').IsSet, LessThan_int32(GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').Regiment.GetMAAChunkCount, GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').Regiment.CalcMaxMAAChunkCount))]"
											parentanchor = right|vcenter
											size = { 90 22 }
											text = "MAA_MANAGER_MOVE_LAST_FROM_TARGET"
											onclick = "[GetScriptedGui('maa_manager_transfer_regiment_from_target_effect').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											tooltip = "[SelectLocalization(And(GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').IsSet, GreaterThanOrEqualTo_int32(GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').Regiment.GetMAAChunkCount, GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').Regiment.CalcMaxMAAChunkCount)), 'MAA_MANAGER_TRANSFER_DISABLED_TARGET_FULL', 'MAA_MANAGER_MOVE_LAST_FROM_TARGET_WARNING')]"
											using = Font_Size_Small
											
											background = {
												using = Background_Area
												tintcolor = { 0.8 0.3 0.2 1 }
												margin = { 2 2 }
											}
										}
									}

									# Spacer (matches the "1" counter width)
									widget = {
										size = { 30 22 }
									}

									# Container for right button (90px to contain full button, aligned left)
									widget = {
										size = { 90 22 }

										# Move Last button - TO target (aligned LEFT edge to container)
										button_standard = {
											visible = "[And(GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').IsSet, EqualTo_int32(GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').Regiment.GetMAAChunkCount, '(int32)1'))]"
											enabled = "[And(GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').IsSet, LessThan_int32(GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').Regiment.GetMAAChunkCount, GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').Regiment.CalcMaxMAAChunkCount))]"
											parentanchor = left|vcenter
											size = { 90 22 }
											text = "MAA_MANAGER_MOVE_LAST_TO_TARGET"
											onclick = "[GetScriptedGui('maa_manager_transfer_regiment_to_target_effect').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											tooltip = "[SelectLocalization(And(GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').IsSet, GreaterThanOrEqualTo_int32(GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').Regiment.GetMAAChunkCount, GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').Regiment.CalcMaxMAAChunkCount)), 'MAA_MANAGER_TRANSFER_DISABLED_TARGET_FULL', 'MAA_MANAGER_MOVE_LAST_TO_TARGET_WARNING')]"
											using = Font_Size_Small
											
											background = {
												using = Background_Area
												tintcolor = { 0.8 0.3 0.2 1 }
												margin = { 2 2 }
											}
										}
									}
								}
							}

							expand = {}

							# Target Stacks (Right)
							vbox = {
								spacing = 5
								layoutpolicy_horizontal = expanding

								text_single = {
									text = "MAA_MANAGER_TARGET_REGIMENTS"
									default_format = "#weak"
									using = Font_Size_Small
									align = center
								}

								text_single = {
									datacontext = "[GetPlayer.MakeScope.Var('maa_manager_selected_target_scope').Regiment]"
									raw_text = "[Regiment.GetMAAChunkCount]"
									default_format = "#P"
									using = Font_Size_Big
									align = center
									tooltip = "MAA_MANAGER_TARGET_REGIMENTS_TOOLTIP"
								}
							}
						}
					}

					text_single = {
						text = "MAA_MANAGER_REGIMENTS_IMMEDIATE_NOTE"
						default_format = "#weak"
						using = Font_Size_Small
						align = center
						margin_bottom = 5
					}
				}
			}

			######################################################
			# TAB 3: MAA RETRAIN
			######################################################
			vbox = {
				name = "tab_retrain_content"
				visible = "[VariableSystem.HasValue('maa_manager_tab', 'retrain')]"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				spacing = 10

				using = Animation_Tab_Switch

				# Instructions
				text_label_center = {
					text = "MAA_MANAGER_RETRAIN_INSTRUCTIONS"
					layoutpolicy_horizontal = expanding
					default_format = "#weak"
					margin = { 10 5 }
				}

				# Main Retrain Layout - Side by Side
				hbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					spacing = 15

					######################################################
					# LEFT PANEL: Available MAA Types Selection
					######################################################
					vbox = {
						name = "retrain_type_selection"
						layoutpolicy_vertical = expanding
						spacing = 5
						minimumsize = { 350 0 }
						maximumsize = { 350 -1 }

						background = {
							using = Background_Area
							margin = { 5 5 }
						}

						text_label_center = {
							text = "MAA_MANAGER_RETRAIN_SELECT_TYPE"
							default_format = "#high"
							margin = { 5 10 }
						}

						divider_light = {
							layoutpolicy_horizontal = expanding
						}

						# Scrollable list of available MAA types
						scrollbox = {
							name = "maa_types_scrollbox"
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							scrollbarpolicy_horizontal = always_off

							blockoverride "scrollbox_content" {
								# Static list with individual visibility filtering for each MAA type
								# Uses type defined in maa_filtered_types_list.gui
								vbox_maa_filtered_list = {}
							}
						}
					}
					######################################################
					# RIGHT PANEL: Conversion Details & Confirmation
					######################################################
					vbox = {
						name = "retrain_details_panel"
						layoutpolicy_vertical = expanding
						spacing = 10

						background = {
							using = Background_Area
							margin = { 5 5 }
						}

						# Title
						text_label_center = {
							text = "MAA_MANAGER_RETRAIN_CONVERSION_DETAILS"
							default_format = "#high"
							margin = { 5 10 }
						}

						divider_light = {
							layoutpolicy_horizontal = expanding
						}

						scrollbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							scrollbarpolicy_horizontal = always_off

							blockoverride "scrollbox_content" {
								vbox = {
									layoutpolicy_horizontal = expanding
									spacing = 15
									margin = { 15 10 }

									# Selection Status
									vbox = {
										visible = "[Not(VariableSystem.Exists('maa_manager_retrain_target_type'))]"
										layoutpolicy_horizontal = expanding
										spacing = 10
										margin_top = 50

										hbox = {
											layoutpolicy_horizontal = expanding
											
											expand = {}
											
											icon = {
												size = { 80 80 }
												texture = "gfx/interface/icons/symbols/icon_cross.dds"
												alpha = 0.5
											}
											
											expand = {}
										}

										text_multi = {
											text = "MAA_MANAGER_RETRAIN_NO_SELECTION"
											layoutpolicy_horizontal = expanding
											max_width = 400
											default_format = "#weak"
											align = center
										}

										expand = {}
									}

									# Conversion Preview (when target selected)
									vbox = {
										visible = "[VariableSystem.Exists('maa_manager_retrain_target_type')]"
										layoutpolicy_horizontal = expanding
										spacing = 15

										# Source Regiment Info
										vbox = {
											visible = "[GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').IsSet]"
											layoutpolicy_horizontal = expanding
											spacing = 8

											background = {
												using = Background_Area_Dark
												alpha = 0.5
												margin = { 5 5 }
											}

											text_label_center = {
												text = "MAA_MANAGER_RETRAIN_CURRENT_TYPE"
												default_format = "#weak"
												using = Font_Size_Small
												margin_top = 10
											}

											hbox = {
												layoutpolicy_horizontal = expanding
												spacing = 10
												margin = { 10 5 }

												expand = {}

												# Current MAA Icon & Name
												highlight_icon = {
													datacontext = "[GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').Regiment]"
													size = { 50 50 }
													texture = "[Regiment.GetMAAType.GetIcon]"
												}

												vbox = {
													spacing = 2

													text_single = {
														datacontext = "[GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').Regiment]"
														text = "[Regiment.GetMenAtArmsTypeNameNoTooltip]"
														default_format = "#high"
														using = Font_Size_Medium
													}

													text_single = {
														datacontext = "[GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').Regiment]"
														text = "MAA_MANAGER_RETRAIN_STACKS"
														default_format = "#weak"
														using = Font_Size_Small
													}
												}

												expand = {}
											}

											divider_light = {
												layoutpolicy_horizontal = expanding
											}

											text_label_center = {
												text = "MAA_MANAGER_RETRAIN_TARGET_TYPE"
												default_format = "#weak"
												using = Font_Size_Small
											}

											hbox = {
												layoutpolicy_horizontal = expanding
												spacing = 10
												margin = { 10 5 }
												margin_bottom = 10

												expand = {}

												# Target MAA Icon (we'll need to find it from the name)
												icon = {
													size = { 50 50 }
													# This will need scripted GUI support to get the icon
													texture = "gfx/interface/icons/regimenttypes/heavy_infantry.dds"
													# TODO: Get actual icon from selected type
												}

												vbox = {
													spacing = 2

													text_single = {
														raw_text = "[VariableSystem.Get('maa_manager_retrain_target_type')]"
														default_format = "#P"
														using = Font_Size_Medium
													}

													text_single = {
														text = "MAA_MANAGER_RETRAIN_NEW_TYPE"
														default_format = "#weak"
														using = Font_Size_Small
													}
												}

												expand = {}
											}
										}

										# Cost Calculation Section
										vbox = {
											visible = "[GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').IsSet]"
											layoutpolicy_horizontal = expanding
											spacing = 8
											margin = { 10 10 }

											background = {
												using = Background_Area_Dark
												alpha = 0.3
												margin = { 5 5 }
											}

											text_label_center = {
												text = "MAA_MANAGER_RETRAIN_COST_BREAKDOWN"
												default_format = "#high"
												using = Font_Size_Small
												margin_top = 10
											}

											divider_light = {
												layoutpolicy_horizontal = expanding
											}

											# This section will need scripted GUI support
											# to calculate the actual cost difference
											
											text_multi = {
												text = "MAA_MANAGER_RETRAIN_COST_PLACEHOLDER"
												layoutpolicy_horizontal = expanding
												max_width = 450
												default_format = "#weak"
												align = center
												margin = { 10 10 }
											}
										}

										expand = {}

										# Confirmation Button
										vbox = {
											visible = "[And(GetPlayer.MakeScope.Var('maa_manager_selected_regiment_scope').IsSet, VariableSystem.Exists('maa_manager_retrain_target_type'))]"
											layoutpolicy_horizontal = expanding
											spacing = 10
											margin_bottom = 15

											hbox = {
												layoutpolicy_horizontal = expanding
												
												expand = {}
												
												button_primary = {
													name = "confirm_retrain"
													size = { 300 45 }
													
													text = "MAA_MANAGER_RETRAIN_CONFIRM"
													
													# TODO: Add scripted GUI effect for retraining
													# onclick = "[GetScriptedGui('maa_manager_retrain_execute').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
													
													enabled = no  # Disabled until backend is implemented
													
													tooltip = "MAA_MANAGER_RETRAIN_CONFIRM_TOOLTIP"
												}
												
												expand = {}
											}

											hbox = {
												layoutpolicy_horizontal = expanding
												
												expand = {}
												
												text_single = {
													text = "MAA_MANAGER_RETRAIN_WARNING"
													default_format = "#X"
													using = Font_Size_Small
												}
												
												expand = {}
											}
										}
									}
								}
							}
						}
					}
				}
			}

			spacer = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = growing
				minimumsize = { 0 10 }
			}
		}
	}
}
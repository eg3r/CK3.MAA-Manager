######################################################
# Men-At-Arms Manager - Shared GUI Types
# 
# This file contains shared GUI type definitions that are
# used by both the 00_ and zz_ override files to ensure
# the MAA Manager button works regardless of load order
######################################################

types MenAtArmsManagerSharedTypes
{
	# Shared vbox_your_armies type with MAA Manager button
	# Used by both 00_ and zz_ override files
	type vbox_your_armies_with_maa_manager = vbox
	{
		hbox_your_raised_and_unraised_soldiers = {
			layoutpolicy_horizontal = expanding
		}

		hbox_your_levies_and_knights = {
			layoutpolicy_horizontal = expanding
			spacing = 10
		}

		vbox = {
			name = "maa_area"
			datacontext = "[MilitaryView.GetMilitaryItem]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			margin = { 0 0 }
			spacing = 4

			vbox = {
				layoutpolicy_horizontal = expanding
				margin = { 0 5 }
				spacing = 5
				name = "heading"

				hbox = {
					layoutpolicy_horizontal = expanding
					ignoreinvisible = no

					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						expand = {}
						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 5

							text_single = {
								text = "BANNER_MEN_AT_ARMS_LABEL"
							}

							text_single = {
								layoutpolicy_horizontal = expanding
								text = "[MilitaryView.GetMAACountAndCapString]"
								default_format = "#high"
								tooltip = "[MilitaryView.GetMAACountAndCapTooltip]"
								using = tooltip_ne
							}
						}

						text_single = {
							max_width = 300
							visible = "[GetPlayer.GetGovernment.IsType( 'landless_adventurer_government' )]"
							layoutpolicy_horizontal = expanding
							text = "ADVENTURER_CAP_HINT"
							default_format = "#weak"
						}
					}

					# Original Raise All button
					button_tertiary = {
						datacontext = "[MilitaryView.GetMilitaryItem]"
						visible = "[Not(IsDataModelEmpty( MilitaryItem.GetOwnedMaa ))]"
						using = Animation_ShowHide_Standard

						name = "raise_all_men_at_arms"
						datacontext = "[GetPlayer]"
						onclick = "[PlayerRaiseAllMenAtArmsRegiments]"
						enabled = "[PlayerCanRaiseAnyMenAtArmsRallyPoint]"
						onrightclick = "[PlayerRaiseAllMenAtArmsRegimentsAtLocation]"
						button_ignore = none

						text = "RAISE_ALL_MEN_AT_ARMS"
						size = {200 36}

						tooltip = "[GetPlayerRaiseAllMenAtArmsTooltip]"
						using = tooltip_sw
						clicksound = "event:/SFX/UI/Unit/Army/sfx_ui_raise_army"
					}

					# MAA Manager button - always visible for testing
					men_at_arms_manager_button = {
						visible = "[GetPlayer.IsValid]"
					}
				}

				divider_light = {
					layoutpolicy_horizontal = expanding
				}
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				name = "maa_tiles"

				fixedgridbox = {
					datacontext = "[MilitaryView.GetMilitaryItem]"
					datamodel = "[MilitaryItem.GetOwnedMaa]"
					layoutpolicy_horizontal = expanding
					flipdirection = yes
					datamodel_wrap = 3
					addcolumn = 169
					addrow = 93

					item = {
						container_maa_item = {}
					}
				}

				expand = {}
			}

			button_standard = {
				datacontext = "[MilitaryView.GetMilitaryItem]"
				visible = "[And( GetPlayer.GetGovernment.IsType( 'landless_adventurer_government' ), Character.IsPlayerInteractionShown('refill_maa_interaction') )]"
				layoutpolicy_horizontal = expanding

				name = "adventurer_refill_shortcut"
				datacontext = "[GetPlayer]"
				enabled = "[Character.IsPlayerInteractionValid('refill_maa_interaction')]"
				onclick = "[Character.OpenPlayerInteraction('refill_maa_interaction')]"
				text = "[Character.GetPlayerInteractionName('refill_maa_interaction')]"
				tooltip = "[Character.GetPlayerInteractionTooltip('refill_maa_interaction')]"
				using = tooltip_se
				clicksound = "event:/SFX/UI/Unit/Army/sfx_ui_raise_army"

				icon = {
					name = "adventurer_gold_icon"
					parentanchor = left|vcenter
					position = { 10 0 }
					size = { 29 29 }
					texture = "gfx/interface/icons/icon_gold.dds"
				}

				icon = {
					name = "adventurer_provision_icon"
					parentanchor = left|vcenter
					position = { 40 0 }
					size = { 29 29 }
					framesize = { 60 60 }
					frame = 0
					texture = "gfx/interface/icons/icon_camp_supply.dds"
				}
			}

			button_standard = {
				datacontext = "[MilitaryView.GetMilitaryItem]"
				visible = "[And( IsNomad(GetPlayer), Character.IsPlayerInteractionShown('refill_maa_nomad_interaction') )]"
				layoutpolicy_horizontal = expanding

				name = "nomad_refill_shortcut"
				datacontext = "[GetPlayer]"
				enabled = "[Character.IsPlayerInteractionValid('refill_maa_nomad_interaction')]"
				onclick = "[Character.OpenPlayerInteraction('refill_maa_nomad_interaction')]"
				text = "[Character.GetPlayerInteractionName('refill_maa_nomad_interaction')]"
				tooltip = "[Character.GetPlayerInteractionTooltip('refill_maa_nomad_interaction')]"
				using = tooltip_se
				clicksound = "event:/SFX/UI/Unit/Army/sfx_ui_raise_army"

				icon = {
					name = "adventurer_gold_icon"
					parentanchor = left|vcenter
					position = { 10 0 }
					size = { 29 29 }
					texture = "gfx/interface/icons/icon_gold.dds"
				}

				icon = {
					name = "nomad_herd_icon"
					parentanchor = left|vcenter
					position = { 40 0 }
					size = { 29 29 }
					texture = "gfx/interface/icons/icon_herd.dds"
				}
			}

			button_standard = {
				datacontext = "[MilitaryView.GetMilitaryItem]"
				visible = "[And( GetPlayer.GetGovernment.IsType( 'landless_adventurer_government' ), Character.IsPlayerInteractionShown('reinforce_soldiers_interaction') )]"
				layoutpolicy_horizontal = expanding

				name = "adventurer_reinforce_shortcut"
				datacontext = "[GetPlayer]"
				enabled = "[Character.IsPlayerInteractionValid('reinforce_soldiers_interaction')]"
				onclick = "[Character.OpenPlayerInteraction('reinforce_soldiers_interaction')]"
				text = "[Character.GetPlayerInteractionName('reinforce_soldiers_interaction')]"
				tooltip = "[Character.GetPlayerInteractionTooltip('reinforce_soldiers_interaction')]"
				using = tooltip_se
				clicksound = "event:/SFX/UI/Unit/Army/sfx_ui_raise_army"

				icon = {
					name = "adventurer_icon"
					parentanchor = left|vcenter
					position = { 5 -1 }
					size = { 28 28 }
					texture = "gfx/interface/icons/combat_effects/owner_in_debt.dds"
				}
			}

			button_standard = {
				name = "add_maa"
				visible = "[Not( IsNomad( GetPlayer ) )]"
				layoutpolicy_horizontal = expanding

				text = "ADD_MEN_AT_ARMS_LABEL"

				onclick = "[MilitaryItem.OnClick]"
				tooltip = "CREATE_MAA_TOOLTIP"
				down = "[MilitaryItem.IsOpen]"

				button_plus = {
					name = "can_be_created"
					visible = "[MilitaryItem.CanCreateAnyMAAType]"
					parentanchor = left|vcenter
					position = { 5 0 }
					alwaystransparent = yes
				}

				warning_icon = {
					name = "at_cap"
					visible = "[Not(MilitaryItem.MaACanBeCreated)]"
					parentanchor = left|vcenter
					position = { 5 0 }
					size = { 28 28 }
				}
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				spacing = 5
				margin = { 0 0 }

				button_standard = {
					name = "upgrade_horde_regiment"
					visible = "[IsNomad( GetPlayer )]"
					layoutpolicy_horizontal = expanding

					text = "UPGRADE_HORDE_REGIMENT_LABEL"

					onclick = "[MilitaryItem.OnClickNomad]"
					tooltip = "[MilitaryItem.GetUpgradeHordeTooltip]"
					down = "[MilitaryItem.IsNomadViewOpen]"

					button_plus = {
						name = "can_upgrade_horde"
						visible = "[MilitaryItem.CanCreateAnyMAAType]"
						parentanchor = left|vcenter
						position = { 5 0 }
						alwaystransparent = yes
					}

					warning_icon = {
						name = "unraised_horde"
						visible = "[Not( MilitaryItem.MaACanBeCreated )]"
						parentanchor = left|vcenter
						position = { 5 0 }
						size = { 28 28 }
					}
				}

				button_standard = {
					name = "recruit_from_subjects"
					visible = "[MilitaryItem.ShouldShowRecruitFromSubjectsButton]"
					layoutpolicy_horizontal = expanding

					text = "RECRUIT_FROM_SUBJECTS_LABEL"

					onclick = "[MilitaryItem.OnClickSubjects]"
					tooltip = "[MilitaryItem.GetRecruitFromSubjectsTooltip]"
					down = "[MilitaryItem.IsRecruitFromSubjectsViewOpen]"
				}
			}
		}

		vbox = {
			visible = "[Not(IsDataModelEmpty(MilitaryView.GetEventTroops))]"
			layoutpolicy_horizontal = expanding
			margin = { 0 5 }
			spacing = 5

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "MILITARY_VIEW_EVENT_TROOPS"
			}

			divider_light = {
				layoutpolicy_horizontal = expanding
			}

			fixedgridbox = {
				datamodel = "[MilitaryView.GetEventTroops]"
				addcolumn = 505
				addrow = 132

				item = {
					widget_event_troop_item = {
					}
				}
			}
		}

		vbox = {
			visible = "[Or( Not(IsDataModelEmpty(MilitaryView.GetHiredMercenaries)), Not(IsDataModelEmpty(MilitaryView.GetHiredHolyOrders)) )]"
			layoutpolicy_horizontal = expanding
			margin = { 0 5 }
			spacing = 5

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "MILITARY_VIEW_HIRED_TROOPS"
			}

			divider_light = {
				layoutpolicy_horizontal = expanding
			}

			vbox = {
				datamodel = "[MilitaryView.GetHiredMercenaries]"
				layoutpolicy_horizontal = expanding
				spacing = 5
				margin_top = 5

				item = {
					button_mercenary_list_item = {
						datacontext = "[HiredTroopItem.GetMercenaryCompany]"
						layoutpolicy_horizontal = expanding
						size = { 504 92 }

						blockoverride "HiredTroopMenAtArmsTypesDataModel"
						{
							datamodel = "[HiredTroopItem.GetRegiments]"
						}
					}
				}
			}

			vbox = {
				datamodel = "[MilitaryView.GetHiredHolyOrders]"
				layoutpolicy_horizontal = expanding
				spacing = 5

				item = {
					button_holyorder_list_item = {
						datacontext = "[HiredTroopItem.GetHolyOrder]"
						layoutpolicy_horizontal = expanding
						size = { 504 92 }

						blockoverride "HiredTroopMenAtArmsTypesDataModel"
						{
							datamodel = "[HiredTroopItem.GetRegiments]"
						}
					}
				}
			}
		}
	}
}